{"version":3,"sources":["main.js"],"names":["classListModify","body","type","classList","defineWidth","container","width","style","show","initalWidth","hide","observeHandler","entries","docBody","submitContainer","isIntersecting","init","submitForm","document","querySelector","window","getComputedStyle","currentStyle","IntersectionObserver","observe","addEventListener"],"mappings":";AAAA,IAAMA,EAAkB,SAACC,EAAMC,GAC7BD,EAAKE,UAAUD,GAAM,eAGjBE,EAAc,SAACC,EAAWC,GAC9BD,EAAUE,MAAMD,MAAQA,GAGpBE,EAAO,SAACP,EAAMI,EAAWI,GAC7BT,EAAgBC,EAAM,OACtBG,EAAYC,EAAWI,IAGnBC,EAAO,SAACT,EAAMI,GAClBL,EAAgBC,EAAM,UACtBG,EAAYC,EAAW,KAGnBM,EAAiB,SAACC,EAASC,EAASC,EAAiBL,GAClD,OAAEG,EAAQ,GAAGG,eAEhBL,EAAKG,EAASC,GADdN,EAAKK,EAASC,EAAiBL,IAI/BO,EAAO,WACLC,IAAAA,EAAaC,SAASC,cAAc,uBACpCL,EAAkBI,SAASC,cAAc,wBACzCN,EAAUK,SAASjB,KACnBQ,EAAcW,OAAOC,iBAAmBA,iBAAiBP,EAAiB,MAAMR,MAAQQ,EAAgBQ,aAAahB,MAE1G,IAAIc,OAAOG,qBAAqB,SAAAX,GAAWD,OAAAA,EAAeC,EAASC,EAASC,EAAiBL,KACrGe,QAAQP,IAGnBC,SAASO,iBAAiB,mBAAoB,WAAMT,OAAAA","file":"main.js","sourceRoot":"../src","sourcesContent":["const classListModify = (body, type) => {\n  body.classList[type]('stickySave')\n}\n\nconst defineWidth = (container, width) => {\n  container.style.width = width\n}\n\nconst show = (body, container, initalWidth) => {\n  classListModify(body, 'add')\n  defineWidth(container, initalWidth)\n}\n\nconst hide = (body, container) => {\n  classListModify(body, 'remove')\n  defineWidth(container, '')\n}\n\nconst observeHandler = (entries, docBody, submitContainer, initalWidth) => {\n  return !(entries[0].isIntersecting)\n    ? show(docBody, submitContainer, initalWidth)\n    : hide(docBody, submitContainer)\n}\n\nconst init = () => {\n  const submitForm = document.querySelector('.tl_formbody_submit')\n  const submitContainer = document.querySelector('.tl_submit_container')\n  const docBody = document.body\n  const initalWidth = window.getComputedStyle ? getComputedStyle(submitContainer, null).width : submitContainer.currentStyle.width;\n\n  const observer = new window.IntersectionObserver(entries => observeHandler(entries, docBody, submitContainer, initalWidth))\n  observer.observe(submitForm)\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => init())\n"]}